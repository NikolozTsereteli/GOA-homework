# 1) კარგად გადაიმეორეთ სიის ფუნქციები. ჩამოწერეთ ყველა მათგანი რაც იცით კომენტარის სახით, მიუწერეთ მაგალითებიც.


# ლისტის ფუნქციები:

# 1. append() ფუნქცია - ამატებს სიის ბოლო ინდექსზე ახალ ელემენტს რომელსაც ჩვენ სახელით ჩავწერთ. append() ფუნქცია გამოიყენება მხოლოდ სიებთან, რადგან ფუნქციით სიის შეცვლა შეგვიძლია, ხოლო სტრინგის არა, ამიტომ append() ფუნქციის სინტაქსი ასე გამოიყურება - სიის_სახელი.append(ელემენტი), სადაც სიის_სახელი არის სიის სახელი, რომელშიც გვსურს ელემენტის დამატება, append() - ფუნქცია, რომელიც სიის ბოლოს ამატებს 1 ელემენტს, და ელემენტი - ელემენტი, რომელიც დაემატება სიას. მაგალითად:

numbers = [1, 2, 3]
numbers.append(4)
print(numbers)

# append() მხოლოდ 1 ელემენტს ამატებს ერთდროულად


# 2. insert() ფუნქცია - როგორც append() ფუნქცია, ასევე ამატებს ახალ ელემენტს ჩვენს სიაში, მაგრამ მათ შორის განსხვავება არის ის, რომ insert() ფუნქცია ამატებს ახალ ელემენტს სიაში არა მაინც და მაინც სიის ბოლო ინდექსზე, არამედ ნებისმიერ ინდექსზე, სადაც ჩვენ მოგვესურვება. insert() ფუნქციის სინტაქსი არის append() ფუნქციის მაგვარი - სიის_სახელი.append(ინდექსი, ელემენტი) - ყველაფერი იგივე, ერთადერთი განსხვავება არის ის რომ ჩვენ ჯერ ვუთითებთ კონკრეტულ ინდექსს თუ სად გვინდა რომ ჩვენი ელემენტი ჩავამატოთ ჩვენს სიაში, და მხოლოდ შემდეგ ვწერთ ელემენტს. მაგალითად:

names = ["Nika", "Goga", "Gabriel"]
names.insert(1, "Ana")
print(names)

# insert() ასევე ამატებს მხოლოდ 1 ელემენტს ერთდროულად


# 3. pop() ფუნქცია შლის კონკრეტულ ელემენტს ჩვენი სიიდან, რომელსაც ჩვენ ვეტყვით რომ ამოშალოს. ჩვენ pop() ფუნქციას ვეუბნებით თუ რომელი ელემენტი ამოშალოს სიიდან, ამ ელემენტის ინდექსით, ანუ იმით თუ რომელ ინდექსზე დგას. pop() ფუნქციის სინტაქსი ასე გამოიყურება - სიის_სახელი.pop(ინდექსი) - სადაც სიის_სახელი არის ჩვენი შექმნილი სიის სახელი რომლიდანაც გვსურს ელემენტის ამოშლა, pop() არის ფუნქცია, რომელიც ამოშლის ფუნქციიდან ერთ-ერთ ელემენტს, და ინდექსი არის ის ინდექსი რომელსაც ჩვენ გადავცემთ pop() ფუნქციას რომ მან ამ ინდექსზე მდგომი ელემენტი ამოშალოს. მაგალითად:

family = ["Mother", "Father", "Son", "Daughter", "Grandma", "Grandpa", "Friend??"]
family.pop(6)
print(family)

# თუ არ მივუთითებთ ინდექსს, ავტომატურად ამოშლის ბოლო ინდექსზე მდგომ ელემენტს სიაში:

humans = ["man", "women", "robots??"]
humans.pop()
print(humans)

# ასევე ერთი გამოყენების შემთხვევაში pop() ფუნქცია შლის მხოლოდ 1 ელემენტს 


# 4. remove() ფუნქცია pop() ფუნქციის მაგვარად შლის კონკრეტულ ელემენტს ჩვენი სიიდან, ერთადერთი განსხვავება მათ შორის არის ის, რომ pop() ფუნქციაში უნდა მიუთითო იმ ელემენტის ინდექსი რომელი ელემენტის ამოშლაც გინდა შენი სიიდან, remove() ფუნქცია-ში კიდევ, უნდა მიუთითო არა ელემენტის ინდექსი, არამედ თავად ელემენტი რომლის ამოშლაც გინდა შენი სიიდან. remove() ფუნქციის სინტაქსი ასე გამოიყურება - სიის_სახელი.remove(ელემენტი) - სადაც სიის_სახელი არის ჩვენი შექმნილი სიის სახელი რომლიდანაც გვსურს ელემენტის ამოშლა, remove() არის ფუნქცია, რომელიც ამოშლის ფუნქციიდან ერთ-ერთ ელემენტს, და ელემენტი არის ის ელემენტი, რომელიც ამ სიიდან უნდა ამოიშალოს. მაგალითად:

professions = ["Mathematician", "Physicist", "Scientist", "Philosopher", "Engineer", "Programmer"]
professions.remove("Engineer")
print(professions)

# remove() ასევე ამატებს მხოლოდ 1 ელემენტს ერთდროულად


# 5. extend() ფუნქცია აერთებს 2 სხვადასხვა ლისტს, extend() ფუნქციის სინტაქსი ასე იწერება - list1.extend(list2) - სადაც list1 არის პირველი ლისტი - ლისტი რომელსაც ჩვენ შევუერთებთ მეორე ლისტს - list2-ს extend() ფუნქციით. მაგალითად:


First_Scores = [56, 76, 87, 23, 14, 56, 67, 89, 87, 97, 60, 19, 20, 49]
Second_Scores = [80, 5, 78, 54, 74, 52, 12, 34, 39, 45, 50, 42, 99, 100]
First_Scores.extend(Second_Scores)
print(First_Scores)

 