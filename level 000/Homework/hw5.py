# 5) კომენტარის სახით დაწერეთ რა არის input(), print(), str(), float(), int() რა არის ამათი ფუნქცია და ყველაფერი რაც იცით. მოიყვანეთ მაგალითებიც  როგორ შეიძლება გამოყენება, განმარტეთ დეტალურად.

# input() ფუნქცია აძლევს საშუალებას პროგრამას რომ მომხმარებლისგან მიიღოს ინფორმაცია. მაგალითად, შეგვიძლია ვკითხოთ მომხმარებელს სახელი, ასაკი, რიცხვი ან სხვა რამ და მომხმარებელი შეიყვანს პასუხს, რომელსაც ჩვენ შევინახავთ ცვლადში. კლასიკური მარტივი მაგალითია: 
name = input("შეიყვანე შენი სახელი: ")
print("გამარჯობა, " + name)

# როცა ჩვენ ამ კოდს გავუშვებთ, პროგრამა აჩვენებს - შეიყვანე შენი სახელი: და მხოლოდ იმის შემდეგ როცა მომხმარებელი შეიყვანს მის სახელს, print() ფუნქციით ტერმინალზე დაიპრინტება გამარჯობა და ის სახელი რაც მომხმარებემა ჩაწერა. 
# input() ფუნქცია მომხმარებლის ნებისმიერ შეყვანილ ტექსტს ან რიცხვს ავტომატურად აბრუნებს string ტიპით, ანუ 7 და 7.0-იც იქნება სტრინგი - "7" და "7.0". ამიტომ როცა გვინდა რომ მომხმარებლის შემოტანილი რიცხვები გამოვიყენოთ მათემატიკური ან სხვა ოპერაციებისთის, ჩვენ input() ფუნქციასთან ვიყენებთ int() ან float() ფუნქციებს იმის მისედვით თუ რომელი ფუნქცია უფრო გვაწყობს, მაგალითად:

age = int(input("შეიყვანე რიცხვი: ")) # აქ თუ შევიყვანთ ათწილადს, მაგალითად 5.5-ს, მაშინ პროგრამა კოდს შეცდომად ჩაგვითვლის, რადგან 5.5 არ არის მთელი რიცხვი, მაგრამ თუ გამოვიყენებთ float() ფუნქციას int() ფუნქციის ნაცვლად, მაშინ თუ ჩავწერთ 5.5-ს, კოდი ჩვეულებრივად შესრულდება, და იმ შემთხვევაშიც კი, თუ მომხმარებლის შემოტანილი რიცხვი არ იქნება ათწილადი და იქნება მთელი რიცხვი, მაგალითად 5 - float(input()) ფუნქციით პროგრამა არ ჩათვლის ამ კოდს შეცდომად და უბრალოდ 5-ს გადააქცევს 5.0-ად. მაგალითად:

number = float(input("შეიყვანე ნებისმიერი რიცხვი: "))
print("შენი რიცხვია:", number) # ამიტომ, თუ ეჭვი გვეპარება ან არ ვიცით რაგორ რიცხვს შემოიტანს მომხმარებელი – მთელ რიცხვს თუ ათწილადს, მაშინ ყოველთვის გამოვიყენებთ float() ფუნქციას, რადგან ის არის უფრო მოქნილი და შეცდომას არცერთ შემთხვევაში არ გამოიტანს.


# print() ფუნქცია არის ის ფუნქცია რომელსაც ჩვენ ვიყენებთ ჩვენი კოდის ტერმინალში გამოსაყვანად და შედეგის მისაღებად. ჩვენ print() ფუნქციაში შეგვიძლია ჩავწეროთ ნებისმიერი ტიპის მონაცემი ან მონაცემები და ისინი გამოვიყვანოთ ერთმანეთთან მძიმეების დაწერით. print() ფუნქციაში ასევე შეგვილია ჩავწეროთ ცვლადები ნებისმიერი ტიპის მონაცემთა მნიშვნელობით. ჩვენ არ შეგვიძლია ახალი ცვლადი შევქმნათ print() ფუნქციაში, ამიტომ ჩვენ არ ვიყენებთ ერთნიშნა ტოლობას =, რომელიც არის მინიჭების ოპერატორი და ქმნის ცვლადს - ცვლადის სახელისთვის ცვლადის მნიშვნელობის მინიჭებით. მაგრამ print() ფუნქციაში ჩვენ შეგვილია გამოვიყენოთ ორმაგი ტოლობა ==, რომელიც არის შედარების ოპერატორი. ჩვენ ასევე შეგვიძლია გამოვიყენოთ print() ფუნქცია მათემატიკური გამოთვლებისთვის, ისევე როგორც ჩვენ შეგვიძლია print() ფუნქციაში შევიყვანოთ 2 ან მეტი ერთი და იგივე მათემატიკური ტიპის მნიშვნელობის მქონე ცვლადები და ჩავატაროთ მათემატიკური გამოთვლები მათზე print() ფუნქციაში. 


# str არის ტექსტური მონაცემთა ტიპი. მაგრამ იგი ავტომატურად არ აღიქვამს ნებისმიერ აკრეფილ ტექსტს ტექსტად, მანამ სანამ ჩვენ ამ ტექსტს არ ჩავსვამთ ორმაგ "", ან ერთ '' ბრჭყალებში. str() ფუნქციას შეულია თითქმის ნებისმიერი მონაცემთა ტიპი გადააქციოს სტრინგ ტექსტურ ტიპად მათი მრჭყალებში ჩასმით, მაგალითად:
str(6)
str(6.0)
str(True)
str[1, 2, 3] # და ასე შემდეგ.

# str ფუნქციას ასევე შეუძლია იგივე მეთოდით შეცვალოს თითქმის ყველანაირი მონაცემთა მნიშვნელობის ცვლადი:

num = 25
text = str(num)

pi = 3.14
text = str(pi)

Am_happy = True
text = str(Am_happy)

my_list = [1, 2, 3]
text = str(my_list)

# ჩვენ ასევე შეგვიძლია გამოვიყენოთ str() ფუნქცია იმისთვის რომ print() ფუნქციით გამოვიტანოთ სტრინგის და სხვა მონაცემთა ტიპი ერთად როგორც ტექსტი, როგორც ერთი მთლიანი სტრინგი. მაგალითად:

age = 9
print("I am " +_age)



